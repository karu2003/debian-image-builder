#!/bin/bash

sysroot_partition(){
# IMAGE_LOOP_DEV="$(losetup --show -P -f ${ROOTFS_FOLDER}${RELEASE_NAME})"
# if [ -e "${IMAGE_LOOP_DEV}"]
#  then losetup --detach "${IMAGE_LOOP_DEV}"
# fi
truncate -s 2048MB "${ROOTFS_FOLDER}${RELEASE_NAME}"
#IMAGE_LOOP_DEV="$(losetup -fP --show ${ROOTFS_FOLDER}${RELEASE_NAME})"
echo -e "o
n
p
1
2048
3906249
a
t
b
p
w" | fdisk "${ROOTFS_FOLDER}${RELEASE_NAME}"
#w" | fdisk "${IMAGE_LOOP_DEV}"

IMAGE_LOOP_DEV="$(losetup --show -P -f ${ROOTFS_FOLDER}${RELEASE_NAME})"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p1"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p ${ROOT}
mount "${IMAGE_LOOP_DEV_ROOTFS}" ${ROOT}
sync
umount ${ROOT}
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" ${ROOT}
}

sysroot_setup(){
SOURCES_LIST="${ROOT}/etc/apt/sources.list"
mkdir -p ${ROOT}/etc/apt/apt.conf.d ${ROOT}/etc/dpkg/dpkg.cfg.d
echo "force-unsafe-io" > "${ROOT}/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io"
if [ $VERBOSE -eq 1 ]; then
	choose_release;
else
	choose_release > /dev/null 2>&1;
fi
}

devuan_keyring(){
URL="https://pkgmaster.devuan.org/devuan/pool/main/d/devuan-keyring/"
FILE="devuan-keyring_2022.09.04_all.deb"
if [[ `ls /usr/share/keyrings/{devuan-archive-keyring.gpg,devuan-keyring.gpg}` ]] > /dev/null 2>&1; then
	:;
else
	wget -cq --show-progress $URL$FILE
	sudo dpkg -i $FILE
	rm -f $FILE
fi
if [[ -f "/usr/share/debootstrap/scripts/${DISTRO_VERSION}" ]]; then
	:;
else
	ln -sr /usr/share/debootstrap/scripts/sid /usr/share/debootstrap/scripts/${DISTRO_VERSION}
fi
}

kali_keyring(){
URL="http://http.kali.org/pool/main/k/kali-archive-keyring/"
FILE="kali-archive-keyring_2022.1_all.deb"
if [ -e /usr/share/keyrings/kali-archive-keyring.gpg ]; then
	:;
else
	wget -cq --show-progress $URL$FILE
	sudo dpkg -i $FILE
	rm -f $FILE;
fi
}

ubuntu_setup(){
if [[ `uname -m | grep "x86_64"` ]]; then
	MACHINE="amd64";
fi
if [[ `uname -m | grep "aarch64"` ]]; then
	MACHINE="arm64";
fi
URL="https://github.com/pyavitz/debian-image-builder/releases/download/dpkg/"
FILE1="dpkg_1.21.2_$MACHINE.deb"
FILE2="debootstrap_1.0.126+nmu1_all.deb"
FILE3="ubuntu-keyring_2020.06.17.1-1_all.deb"
FILE4="ubuntu-archive-keyring_2020.06.17.1-1_all.deb"
FILE5="ubuntu-cloud-keyring_2020.06.17.1-1_all.deb"
FILE6="ubuntu-dbgsym-keyring_2020.06.17.1-1_all.deb"
if [[ `grep -w "Ubuntu" "/etc/os-release"` ]] && [[ `grep -w "VERSION_CODENAME=jammy" "/etc/os-release"` ]]; then
	:;
else
	if [[ `apt show dpkg | grep "Version: 1.21"` ]] > /dev/null 2>&1; then
		:;
	else
		wget -cq $URL$FILE1
		wget -cq $URL$FILE2
		sudo dpkg -i *.deb
		rm -f *.deb
	fi
fi
if [[ -f "/usr/share/keyrings/ubuntu-archive-keyring.gpg" ]]; then
	:;
else
	wget -cq --show-progress $URL$FILE3
	wget -cq --show-progress $URL$FILE4
	wget -cq --show-progress $URL$FILE5
	wget -cq --show-progress $URL$FILE6
	sudo dpkg -i *.deb
	rm -f *.deb
fi
if [[ "$DISTRO_VERSION" == "jammy" || "$DISTRO_VERSION" == "kinetic" || "$DISTRO_VERSION" == "lunar" ]]; then
	if [[ -f "/usr/share/debootstrap/scripts/${DISTRO_VERSION}" ]]; then
		:;
	else
		ln -sr /usr/share/debootstrap/scripts/gutsy /usr/share/debootstrap/scripts/${DISTRO_VERSION}
	fi
fi
}

run_debootstrap(){
if [[ "$DISTRO" == "devuan" ]]; then
	KEY="/usr/share/keyrings/devuan-archive-keyring.gpg"
	debootstrap --arch ${ARCH_EXT} --foreign --force-check-gpg --keyring=$KEY ${DISTRO_VERSION} ${ROOT} http://deb.devuan.org/merged
	chroot ${ROOT} /debootstrap/debootstrap --second-stage
else
	debootstrap --arch ${ARCH_EXT} --foreign ${DISTRO_VERSION} ${ROOT}
	chroot ${ROOT} /debootstrap/debootstrap --second-stage
fi
}
