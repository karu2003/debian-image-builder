#!/bin/bash
source lib/function/echoes
source lib/source
validation
source lib/function/rootfs
source board.txt > /dev/null 2>&1
source userdata.txt > /dev/null 2>&1
HOST_MACHINE=`cat /etc/os-release | grep -w NAME | sed 's/NAME=//g' | sed 's/"//g' | sed 's/ GNU\/Linux//g'`

if [[ -d "sysroot" ]]; then
	make cleanup;
	clear -x;
fi
if [ $VERBOSE -eq 1 ]; then
	set -eux -o pipefail;
else
	set -eu -o pipefail;
fi
if [[ "$DISTRO" == "devuan" || "$DISTRO" == "kali" ]]; then
	${DISTRO}_keyring;
fi
if [[ "$HOST_MACHINE" == "Ubuntu" ]]; then
	:;
else
	if [[ "$DISTRO" == "ubuntu" ]]; then
		ubuntu_setup;
	fi
fi
ROOT="sysroot"
RELEASE_TARBALL=${DISTRO}-${DISTRO_VERSION}-${ROOTFS_ARCH}.tar.xz
if [[ -f "$RELEASE_TARBALL" ]]; then
	ls -ls $RELEASE_TARBALL
	exit 0
fi
echo -e "${WHT}Starting debootstrap${FIN} ..."
# start debootstrap
if [ $DEVROOTFS -eq 1 ]; then
	source lib/function/release
	RAM=0
	ROOTFS_FOLDER="img/"
	RELEASE_NAME=${DISTRO}-${DISTRO_VERSION}-${ROOTFS_ARCH}
	if [ $RAM -ne 0 ]; then
		IMAGE_FOLDER="ram/"
	fi
	mkdir -p "$ROOTFS_FOLDER"
	if [ $RAM -ne 0 ]; then
		mount -t tmpfs -o size=3G tmpfs $ROOTFS_FOLDER
	fi
	if [ $VERBOSE -eq 1 ]; then
		sysroot_partition
	else
		sysroot_partition > /dev/null 2>&1
	fi
fi
mkdir -p ${ROOT}/usr/bin
# if [[!`uname -m | grep -q "armv7l"`]]; then
#  cp $(command -v "${STATIC}") ${ROOT}/usr/bin;
# fi
#cp $(command -v "${STATIC}") ${ROOT}/usr/bin; # 2>/dev/null 
run_debootstrap

# developer tarball
if [ $DEVROOTFS -eq 1 ]; then
	sysroot_setup
	mount -o bind /dev ${ROOT}/dev
	mount -o bind /dev/pts ${ROOT}/dev/pts
	cp -f lib/source ${ROOT}/root/source.txt
	cp -f {scripts/rootfs-extra,userdata.txt,board.txt} ${ROOT}/root/
	chroot ${ROOT} /root/rootfs-extra
	umount ${ROOT}/dev/pts
	umount ${ROOT}/dev
	rm -fr ${ROOT}/root/{rootfs-extra,*.txt}
	rm -f ${ROOT}/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io
	rm -f ${ROOT}/etc/apt/sources.list
fi

# clean up
if [[ -f "${ROOT}/usr/bin/${STATIC}" ]]; then
	rm -f ${ROOT}/usr/bin/${STATIC}
fi
rm -fdr ${ROOT}/var/cache/debconf/*

# finish
echo
echo -e "== Archiving: ${RELEASE_TARBALL}"
cd ${ROOT}
XZ_DEFAULTS="--threads=${CORES}"; export XZ_DEFAULTS;tar cfJ - * | (pv -terb > ../$RELEASE_TARBALL)
cd ..

if [ $DEVROOTFS -eq 1 ]; then
	losetup -d "${IMAGE_LOOP_DEV}"
	rm -f "${ROOTFS_FOLDER}${RELEASE_NAME}"
	if [ $RAM -ne 0 ]; then
		umount "${ROOTFS_FOLDER}"
	fi
	rmdir "${ROOTFS_FOLDER}"
	# just in case
	make cleanup > /dev/null 2>&1
fi

if [[ -d "${ROOT}" ]]; then
	rm -fdr ${ROOT}
fi

if [[ "$HOST_MACHINE" == "Debian" || "$HOST_MACHINE" == "Ubuntu" ]]; then
	if [[ -f "/usr/share/debootstrap/scripts/chimaera" ]]; then
		rm -f /usr/share/debootstrap/scripts/chimaera
	fi
	if [[ -f "/usr/share/debootstrap/scripts/daedalus" ]]; then
		rm -f /usr/share/debootstrap/scripts/daedalus
	fi
fi

clear -x

exit 0
